name: Build FlameRobin for Debian

env:
  wx-tag-version: v3.2.6

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential cmake libwxgtk3.2-dev dpkg-dev \
          libfbclient2 firebird3.0-server firebird3.0-utils firebird-dev \
          firebird3.0-server-core firebird3.0-common rsync wget

    - name: wxWidgets Cache
      id: cache-wxwidget
      uses: actions/cache@v4
      with:
        path: wxWidgets
        key: ${{ runner.os }}-wxwidgets-${{env.wx-tag-version}}

    - if: ${{ steps.cache-wxwidget.outputs.cache-hit != 'true' }}
      name: Clone wxWidgets
      run: git clone --recursive --branch ${{ env.wx-tag-version }} --depth 1 https://github.com/wxWidgets/wxWidgets.git

    - if: ${{ steps.cache-wxwidget.outputs.cache-hit != 'true' }}
      name: Build wxWidgets
      run: |
        cd wxWidgets
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DwxBUILD_SHARED=OFF
        make -j$(nproc)
        sudo make install
        sudo ldconfig

    - name: Build and install ICU from source
      run: |
        chmod +x templates/trees/deb/scripts/build-icu.sh
        templates/trees/deb/scripts/build-icu.sh

    - name: Configure FlameRobin with CMake
      run: |
        export PATH="/usr/local/bin${PATH:+:$PATH}"
        export LD_LIBRARY_PATH="/opt/icu/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"

        cmake -S . -B Build -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=/opt/flamerobin/ \
              -DICU_ROOT=/opt/icu

    - name: Build FlameRobin
      run: |
        cmake --build Build --config Release -j$(nproc)

    - name: Locate the compiled executable
      run: |
        find Build/ -name "flamerobin" -type f
        du -skh Build/flamerobin

    - name: Copy library dependencies
      run: |
        mkdir -p templates/trees/deb/flamerobin/opt/flamerobin/lib
        ldd Build/flamerobin | awk '{print $3}' | grep -E '/lib|/usr/lib' | grep -v "not found" | xargs -I {} cp -v {} templates/trees/deb/flamerobin/opt/flamerobin/lib/
        cp /opt/icu/lib/libicu*.so* templates/trees/deb/flamerobin/opt/flamerobin/lib/
        rm -rf templates/trees/deb/flamerobin/opt/flamerobin/lib/libc.so*

    - name: Set version and move executable
      run: |
        FLAMEROBIN_VERSION=$(awk '
          /FR_VERSION_MAJOR/ { major = $3 }
          /FR_VERSION_MINOR/ { minor = $3 }
          /FR_VERSION_RLS/   { rls   = $3 }
          END { print major "." minor "." rls }
          ' src/frversion.h)
        echo "FLAMEROBIN_VERSION=$FLAMEROBIN_VERSION" >> $GITHUB_ENV

        sed -i "s/^Version: .*/Version: ${FLAMEROBIN_VERSION}/" templates/trees/deb/flamerobin/DEBIAN/control
        mkdir -p templates/trees/deb/flamerobin/opt/flamerobin/bin
        cp -r Build/flamerobin templates/trees/deb/flamerobin/opt/flamerobin/bin/

    - name: Copy extra files to /share
      run: |
        mkdir -p templates/trees/deb/flamerobin/opt/flamerobin/share/flamerobin
        rsync -av --exclude=flamerobin Build/ templates/trees/deb/flamerobin/opt/flamerobin/share/flamerobin/

    - name: Build .deb package
      run: |
        dpkg-deb --build templates/trees/deb/flamerobin templates/trees/deb/flamerobin-${FLAMEROBIN_VERSION}.deb

    - name: Upload .deb package
      uses: actions/upload-artifact@v4
      with:
        name: flamerobin-deb
        path: templates/trees/deb/flamerobin-${{ env.FLAMEROBIN_VERSION }}.deb
